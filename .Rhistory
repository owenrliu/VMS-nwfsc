## it has a TON of complexity, and includes multiple scales of polygons (e.g., all state waters vs. 5km squares or CA fishing blocks)
# Say we wanted a map of central California only, but by CA fishing block
# Treat the spatial data like a data frame to filter out data of interest
ca_fishing_blocks <- grd %>%
filter(SUBREGION=="Monterey Bay") %>%
# you can use sf to do spatial summaries
group_by(CA_FISHBLO) %>%
# this will combine any lower level polygons into the polygons we want
summarise() %>%
ungroup()
glimpse(ca_fishing_blocks)
# set polygons with -999 to NA for convenience
ca_fishing_blocks <- ca_fishing_blocks %>% mutate(CA_FISHBLO=ifelse(CA_FISHBLO==-999,NA,CA_FISHBLO))
# now we have just a spatial list of Monterey CA fishing blocks
# get a bounding box for plotting purposes (set x and y limits)
bbox=st_bbox(ca_fishing_blocks)
# do the plot, which looks almost just like any other ggplot
ca_fishing_blocks_plot <-ggplot(ca_fishing_blocks)+
# this adds the layer, and we'll scale color just on the fishing block ID number (normally this would be some variable of interest, e.g. whale density)
# here I make it a little transparent too (with alpha)
geom_sf(aes(fill=CA_FISHBLO),alpha=0.8)+
# sf can also label the blocks
geom_sf_text(aes(label=CA_FISHBLO),size=2,color='white')+
# if you had another other shapefiles (e.g. a basemap of state polygons) you could add them here too
# geom_sf(data=coaststates,fill='gray50')+
# then here's the color scale, from the viridis package
scale_fill_viridis(na.value='gray80')+
# use our bounding box from above to set limits for plotting
coord_sf(xlim=c(bbox[1],bbox[3]),ylim=c(bbox[2],bbox[4]))+
# titles and axis labels and such
labs(fill="CA Fishing\nBlock Number",title="",x="",y="")+
# some adjustments (legend placement and background color)
theme(legend.position = 'bottom',
legend.key.size = unit(1,'cm'))
ca_fishing_blocks_plot
?geom_raster
?ggplot2::geom_raster
knitr::opts_chunk$set(echo = TRUE)
library(raster)
library(tidyverse)
library(knitr)
library(extrafont)
library(ggsci)
library(lubridate)
library(sf)
library(geosphere)
library(magrittr)
library(rnaturalearth)
library(gstat)
library(data.table)
library(fasterize)
library(gganimate)
# ggplot theme
plot_theme <-   theme_minimal()+
theme(text=element_text(family="Gill Sans MT",size=12,color="black"),
legend.text = element_text(size=14),
axis.title=element_text(family="sans",size=14,color="black"),
axis.text=element_text(family="sans",size=8,color="black"),
panel.grid.major = element_line(color="gray50",linetype=3))
theme_set(plot_theme)
fp <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
fp_tix <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
# fish tickets
load(file=paste0(fp_tix,"FishTix_all_2009_2018.RData"))
# a coastline, for plotting
# coastline for plotting
coaststates <- ne_states(country='United States of America',returnclass = 'sf') %>%
filter(name %in% c('California','Oregon','Washington','Nevada'))
coastline <- ne_coastline(scale='medium',returnclass = 'sf') %>%
st_crop(st_bbox(coaststates))
# Load if not already loaded
simulated_traps <- readRDS(file=paste0(fp,"sim_traps_speed_depth_filters.rds")) %>% ungroup()
# traps locations only (discard VMS data for now), attached to fish ticket data
traplocs <- simulated_traps %>% select(Rec_ID,traps) %>%
left_join(fishtix_matched_all,by="Rec_ID") %>%
select(Rec_ID,date,year,month,pacfin_port_code,port_group_code,agency_code,drvid,FINAL_LENGTH,traps) %>%
distinct(Rec_ID,.keep_all = T) %>%
# count number of traps associated with each trip
mutate(ntraps=purrr::map_int(traps,nrow))
# Vessel monthly weighting factors
vessel_month_allweights<-readRDS(file=paste0(fp,"vessel_month_all_weights.rds"))
# 5x5 grid shapefile
# grd <- read_sf(here::here("Input_Data","5x5 Grid","five_km_grid_polys_geo.shp"))
grd <- read_sf(here::here("Input_Data","5x5 Grid","regions_master_final_lamb.shp"))
names(grd)
meta <- readxl::read_xlsx(here::here("Input_Data","5x5 Grid","regions_master_final_lamb_metadata.xlsx"))
meta %>% kable()
names(fishtix_matched_all)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(extrafont)
library(ggsci)
library(lubridate)
library(sf)
library(geosphere)
library(magrittr)
library(rnaturalearth)
library(marmap)
# ggplot theme
plot_theme <-   theme_minimal()+
theme(text=element_text(family="Gill Sans MT",size=12,color="black"),
legend.text = element_text(size=14),
axis.title=element_text(family="sans",size=14,color="black"),
axis.text=element_text(family="sans",size=8,color="black"),
panel.grid.major = element_line(color="gray50",linetype=3))
theme_set(plot_theme)
# File path where data are held
fp <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
fp_tix <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
# Load Rdata files
# Interpolated, regularized VMS data, all years (spatial version)
vms_sf<-readRDS(file=paste0(fp,"VMS_int_reg_w_grid.rds"))
# non-spatial version of full VMS data
vms <- vms_sf
st_geometry(vms) <- NULL
# fish ticket data
load(file=paste0(fp_tix,"FishTix_all_2009_2018.RData"))
# a coastline, for plotting
# coastline for plotting
coaststates <- ne_states(country='United States of America',returnclass = 'sf') %>%
filter(name %in% c('California','Oregon','Washington'))
coastline <- ne_coastline(scale='medium',returnclass = 'sf') %>%
st_crop(st_bbox(coaststates))
names(vms)
sum(is.na(vms$DEPTH_CATM))/nrow(vms)
knitr::opts_chunk$set(echo = TRUE)
# 5x5 grid shapefile
# grd <- read_sf(here::here("Input_Data","5x5 Grid","five_km_grid_polys_geo.shp"))
grd <- read_sf(here::here("Input_Data","5x5 Grid","regions_master_final_lamb.shp"))
names(grd)
sum(is.na(grd$DEPTH_CATM))/nrow(grd)
sum(is.na(vms$DEPTH_CATM))/nrow(vms)
sum(is.na(vms$GRID5KM_ID))/nrow(vms)
names(vms)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(extrafont)
library(ggsci)
library(lubridate)
library(sf)
library(geosphere)
library(magrittr)
library(rnaturalearth)
library(marmap)
# ggplot theme
plot_theme <-   theme_minimal()+
theme(text=element_text(family="Gill Sans MT",size=12,color="black"),
legend.text = element_text(size=14),
axis.title=element_text(family="sans",size=14,color="black"),
axis.text=element_text(family="sans",size=8,color="black"),
panel.grid.major = element_line(color="gray50",linetype=3))
theme_set(plot_theme)
# File path where data are held
fp <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
fp_tix <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
# Load Rdata files
# Interpolated, regularized VMS data, all years (spatial version)
vms_sf<-readRDS(file=paste0(fp,"VMS_int_reg_w_grid.rds"))
# non-spatial version of full VMS data
vms <- vms_sf
st_geometry(vms) <- NULL
# fish ticket data
load(file=paste0(fp_tix,"FishTix_all_2009_2018.RData"))
# a coastline, for plotting
# coastline for plotting
coaststates <- ne_states(country='United States of America',returnclass = 'sf') %>%
filter(name %in% c('California','Oregon','Washington'))
coastline <- ne_coastline(scale='medium',returnclass = 'sf') %>%
st_crop(st_bbox(coaststates))
names(vms_sf)
test <- vms_sf %>% filter(is.na(GRID5KM_ID))
ggplot(test)+geom_sf()+geom_sf(coaststates)
ggplot(test)+geom_sf()+geom_sf(data=coaststates)
names(vms)
?plot.sf
plot.sfc(vms_sf)
plot(vms_sf['GRID_5KM'])
plot(vms_sf['GRID5KM_ID'])
plot(vms_sf['GRID5KM_ID'])
glimpse(test)
plot(test['Rec_ID'])
knitr::opts_chunk$set(echo = TRUE)
# 5x5 grid shapefile
# grd <- read_sf(here::here("Input_Data","5x5 Grid","five_km_grid_polys_geo.shp"))
grd <- read_sf(here::here("Input_Data","5x5 Grid","regions_master_final_lamb.shp"))
st_crs(grd)
st_crs(vms_sf)
plot(grd['GRID5KM_ID'])
test2 <- vms_sf %>% filter(!is.na(GRID5KM_ID))
plot(test2[])
plot(test2['GRID5KM_ID'])
plot(test2['GRID5KM_ID'])
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(here)
library(fasterize)
library(raster)
library(rnaturalearth)
library(knitr)
# load RData
fp <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
load(file=paste0(fp,"VMS_2009_2018_clean.RData"))
names(vms_int_all)
names(vms_orig_clean)
knitr::opts_chunk$set(echo = TRUE)
# File path where data are held
fp <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
# Load Rdata files
# Interpolated, regularized VMS data, all years (spatial version)
vms_sf<-readRDS(file=paste0(fp,"VMS_int_reg_w_grid.rds"))
no_grid <- vms_sf %>% filter(is.na(GRID5KM_ID))
has_grid <- vms_sf %>% filter(!is.na(GRID5KM_ID))
names(no_grid)
names(has_grid)
names(vms_int_all)
names(vms_orig_clean)
names(vms_int_reg)
has_grid <- vms_sf %>% filter(!is.na(GRID5KM_ID))
has_grid <- vms_sf %>% filter(!is.na(GRID5KM_ID))
names(no_grid)
# Bathymetry layer
bathy <- readGEBCO.bathy(file="C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/GEBCO Grid/GEBCO_2019_-132.3021_50.6549_-116.6354_31.2799.nc")
library(marmap)
# Bathymetry layer
bathy <- readGEBCO.bathy(file="C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/GEBCO Grid/GEBCO_2019_-132.3021_50.6549_-116.6354_31.2799.nc")
?readGEBCO.bathy
# match depth
depths <- vms_sf %>%
st_transform(4326) %>% st_coordinates() %>%
get.depth(bathy,.,locator=FALSE)
# match depth
vms_pts <- vms_sf %>% st_transform(4326) %>% st_coordinates()
head(vms_sf$X_COORD)
max(vms_pts[,1])
min(vms_pts[,1])
max(vms_pts[,2])
min(vms_pts[,2])
?get.depth
# Bathymetry layer
bathy <- readGEBCO.bathy(file="C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/GEBCO Grid/GEBCO_2019_-132.0_50.0_-115.0_29.0.nc")
depths <- vms_pts %>%
get.depth(bathy,.,locator=FALSE)
NAMES(DEPTHS)
names(depths)
head(depths$depth)
depths <- depths %>% as_tibble() %>% mutate(depth_m=depth*0.3048)
View(depths)
# join depth data
has_grid <- has_grid %>% bind_cols(select(depths,lon,lat,depth_m))
# join depth data
has_grid <- has_grid %>% bind_cols(dplyr::select(depths,lon,lat,depth_m))
# join depth data
vms_sf <- vms_sf %>% bind_cols(dplyr::select(depths,lon,lat,depth_m))
View(vms_sf)
# add binary indicator as to whether or not an observations has grid data
vms_sf <- vms_sf %>%
mutate(has_grid=!is.na(GRID5KM_ID))
sum(vms_sf$has_grid)
sum(!vms_sf$has_grid)
vms_sf %>%
ggplot(aes(depth_m,..density..,fill=has_grid))+
geom_density(alpha=0.7)
?coord_cartesian
# ggplot theme
plot_theme <-   theme_minimal()+
theme(text=element_text(family="Gill Sans MT",size=12,color="black"),
legend.text = element_text(size=14),
axis.title=element_text(family="sans",size=14,color="black"),
axis.text=element_text(family="sans",size=8,color="black"),
panel.grid.major = element_line(color="gray50",linetype=3))
theme_set(plot_theme)
vms_sf %>%
ggplot(aes(depth_m,..density..,fill=has_grid))+
geom_density(alpha=0.7)+
coord_cartesian(xlim=c(-100,100))
max(vms_sf$depth_m[vms_sf$has_grid])
mean(vms_sf$depth_m[vms_sf$has_grid])
library(ggschi)
library(ggsci)
vms_sf %>%
ggplot(aes(depth_m,..density..,fill=has_grid))+
geom_density(alpha=0.7)+
coord_cartesian(xlim=c(-100,100))+
geom_vline(xintercept=0)+
scale_fill_npg(name="Has 5KM Grid")
vms_sf %>%
ggplot(aes(depth_m,..density..,fill=has_grid))+
geom_density(alpha=0.7)+
coord_cartesian(xlim=c(-100,100))+
geom_vline(xintercept=0)+
labs(x="Depth (m)",title="Depth Distribution of VMS points")+
scale_fill_npg(name="Has 5KM Grid")
monterey <- vms_sf %>%
filter(lat<37,lat>36.3,lon< -121.4,lon>-122.5)
bbox_monterey <- st_bbox(monterey)
# coastline
coaststates <- ne_states(country='United States of America',returnclass = 'sf') %>%
filter(name %in% c('California','Oregon','Washington'))
st_crs(coaststates)
# coastline
coaststates <- ne_states(country='United States of America',returnclass = 'sf') %>%
filter(name %in% c('California','Oregon','Washington')) %>%
st_transform(st_crs(vms_sf))
monterey %>%
ggplot()+
geom_sf(col=has_grid)+
geom_sf(data=coaststates)+
xlim(bbox_monterey[1],bbox_monterey[3])+
ylim(bbox_monterey[2],bbox_monterey[4])
names(monterey)
monterey %>%
ggplot()+
geom_sf(aes(col=has_grid))+
geom_sf(data=coaststates)+
xlim(bbox_monterey[1],bbox_monterey[3])+
ylim(bbox_monterey[2],bbox_monterey[4])
?scale_color_aaas
ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=monterey,aes(col=has_grid,fill=has_grid),size=0.5)+
scale_color_npg()
ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=monterey,aes(col=has_grid,fill=has_grid),size=0.5)+
scale_color_npg()+
xlim(bbox_monterey[1],bbox_monterey[3])+
ylim(bbox_monterey[2],bbox_monterey[4])
eureka <- vms_sf %>%
filter(lat<41.3,lat>40.5,lon< -123.5,lon>-124.5)
bbox_eureka <- st_bbox(eureka)
ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=eureka,aes(col=has_grid,fill=has_grid),size=0.5)+
scale_color_npg(name="Has 5km Grid")+
xlim(bbox_eureka[1],bbox_eureka[3])+
ylim(bbox_eureka[2],bbox_eureka[4])
ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=eureka,aes(col=has_grid,fill=has_grid),size=0.5,alpha=0.5)+
scale_color_npg(name="Has 5km Grid")+
xlim(bbox_eureka[1],bbox_eureka[3])+
ylim(bbox_eureka[2],bbox_eureka[4])
library(extrafont)
eureka_points <- ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=eureka,aes(fill=has_grid),size=0.5,alpha=0.5)+
scale_fill_npg(name="Has 5km Grid")+
xlim(bbox_eureka[1],bbox_eureka[3])+
ylim(bbox_eureka[2],bbox_eureka[4])
eureka_points
# Monterey
monterey <- vms_sf %>%
filter(lat<37,lat>36.3,lon< -121.4,lon>-122.5)
bbox_monterey <- st_bbox(monterey)
monterey_points <- ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=monterey,aes(col=has_grid,fill=has_grid),size=0.5,alpha=0.5)+
scale_color_npg(name="Has 5km Grid")+
scale_fill_npg(name="Has 5km Grid")+
xlim(bbox_monterey[1],bbox_monterey[3])+
ylim(bbox_monterey[2],bbox_monterey[4])
# Eureka
eureka <- vms_sf %>%
filter(lat<41.3,lat>40.5,lon< -123.5,lon>-124.5)
bbox_eureka <- st_bbox(eureka)
eureka_points <- ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=eureka,aes(col=has_grid,fill=has_grid),size=0.5,alpha=0.5)+
scale_color_npg(name="Has 5km Grid")+
scale_fill_npg(name="Has 5km Grid")+
xlim(bbox_eureka[1],bbox_eureka[3])+
ylim(bbox_eureka[2],bbox_eureka[4])
monterey_points
eureka_points
monterey_points <- ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=monterey,aes(col=has_grid,fill=has_grid),size=0.5,alpha=0.5)+
scale_color_npg(name="Has 5km Grid\nassigned")+
scale_fill_npg(name="Has 5km Grid\nassigned")+
xlim(bbox_monterey[1],bbox_monterey[3])+
ylim(bbox_monterey[2],bbox_monterey[4])+
labs(title="Monterey VMS Points")
eureka_points <- ggplot()+
geom_sf(data=coaststates)+
geom_sf(data=eureka,aes(col=has_grid,fill=has_grid),size=0.5,alpha=0.5)+
scale_color_npg(name="Has 5km Grid\nassigned")+
scale_fill_npg(name="Has 5km Grid\nassigned")+
xlim(bbox_eureka[1],bbox_eureka[3])+
ylim(bbox_eureka[2],bbox_eureka[4])+
labs(title="Eureka VMS Points")
monterey_points
eureka_points
median(vms_sf$depth_m[!vms_sf$has_grid])
mean(vms_sf$depth_m[!vms_sf$has_grid])
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(knitr)
library(extrafont)
library(ggsci)
library(lubridate)
library(sf)
library(geosphere)
library(magrittr)
library(rnaturalearth)
library(marmap)
# ggplot theme
plot_theme <-   theme_minimal()+
theme(text=element_text(family="Gill Sans MT",size=12,color="black"),
legend.text = element_text(size=14),
axis.title=element_text(family="sans",size=14,color="black"),
axis.text=element_text(family="sans",size=8,color="black"),
panel.grid.major = element_line(color="gray50",linetype=3))
theme_set(plot_theme)
# File path where data are held
fp <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
fp_tix <- "C:/Users/Owen.Liu/Documents/NWFSC Research/Dungeness Fleet Dynamics/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
# Load Rdata files
# Interpolated, regularized VMS data, all years (spatial version)
vms_sf<-readRDS(file=paste0(fp,"VMS_int_reg_w_grid.rds"))
# non-spatial version of full VMS data
vms <- vms_sf
st_geometry(vms) <- NULL
# fish ticket data
load(file=paste0(fp_tix,"FishTix_all_2009_2018.RData"))
# a coastline, for plotting
# coastline for plotting
coaststates <- ne_states(country='United States of America',returnclass = 'sf') %>%
filter(name %in% c('California','Oregon','Washington'))
coastline <- ne_coastline(scale='medium',returnclass = 'sf') %>%
st_crop(st_bbox(coaststates))
tix_vms_2017 <- fishtix_matched_all %>% filter(year==2018)
tix_vms_2018 <- fishtix_matched_all %>% filter(year==2018)
tix_vms_2017 <- fishtix_matched_all %>% filter(year==2017)
tix_all_2017 <- fishtix_basic_all %>% filter(year==2017)
tix_all_2018 <- fishtix_basic_all %>% filter(year==2017)
tix_all_2018 <- fishtix_basic_all %>% filter(year==2018)
vms_2017 <- vms %>% filter(year==2017)
names(vms)
vms <- vms %>% mutate(year=year(westcoastdate))
head(vms$year)
vms_2017 <- vms %>% filter(year==2017)
vms_2018 <- vms %>% filter(year==2018)
# do vms and fishtix line up
Rec_IDs2017 <- unique(tix_vms_2017$Rec_ID)
# do vms and fishtix line up
tix_vmsonly_Rec_IDs2017 <- unique(tix_vms_2017$Rec_ID)
tix_vmsonly_Rec_IDs2018 <- unique(tix_vms_2018$Rec_ID)
tix_all_Rec_IDs2017 <- unique(tix_all_2017$Rec_ID)
tix_all_Rec_IDs2018 <- unique(tix_all_2018$Rec_ID)
vms_Rec_IDs2017 <- unique(vms_2017$Rec_ID)
vms_Rec_IDs2018 <- unique(vms_2018$Rec_ID)
# look for overlaps
common_RecIDs_2017 <- intersect(tix_vmsonly_Rec_IDs2017,vms_Rec_IDs2017)
common_RecIDs_2018 <- intersect(tix_vmsonly_Rec_IDs2018,vms_Rec_IDs2018)
# look for overlaps
common_RecIDs_alltix_2017 <- intersect(tix_all_Rec_IDs2017,vms_Rec_IDs2017)
common_RecIDs_alltix_2018 <- intersect(tix_all_Rec_IDs2018,vms_Rec_IDs2018)
common_RecIDs_vmstix_2017 <- intersect(tix_vmsonly_Rec_IDs2017,vms_Rec_IDs2017)
common_RecIDs_vmstix_2018 <- intersect(tix_vmsonly_Rec_IDs2018,vms_Rec_IDs2018)
# percentages
length(common_RecIDs_alltix_2017)/length(tix_all_Rec_IDs2017)
paste(length(common_RecIDs_alltix_2018)/length(tix_all_Rec_IDs2018)*100,"percent of all tickets in 2017 match to VMS records")
# percentages
paste(length(common_RecIDs_alltix_2017)/length(tix_all_Rec_IDs2017)*100,"percent of all tickets in 2017 match to VMS records")
paste(length(common_RecIDs_alltix_2018)/length(tix_all_Rec_IDs2018)*100,"percent of all tickets in 2017 match to VMS records")
# percentages
paste(length(common_RecIDs_alltix_2017)/length(tix_all_Rec_IDs2017)*100 %>% signif(2),"percent of all tickets in 2017 match to VMS records")
# percentages
paste(length(common_RecIDs_alltix_2017)/length(tix_all_Rec_IDs2017)*100 %>% signif(0),"percent of all tickets in 2017 match to VMS records")
# percentages
paste(length(common_RecIDs_alltix_2017)/length(tix_all_Rec_IDs2017)*100 %>% round(),"percent of all tickets in 2017 match to VMS records")
# percentages
paste(round(length(common_RecIDs_alltix_2017)/length(tix_all_Rec_IDs2017)*100),"percent of all tickets in 2017 match to VMS records")
paste(round(length(common_RecIDs_alltix_2018)/length(tix_all_Rec_IDs2018)*100),"percent of all tickets in 2017 match to VMS records")
sum(
unique(vms_2017$Rec_ID) %in% unique(tix_all_2017$Rec_ID)
)
sum(
unique(vms_2018$Rec_ID) %in% unique(tix_all_2018$Rec_ID)
)
sum(
unique(vms_2018$Rec_ID) %in% unique(tix_vms_2018$Rec_ID)
)
glimpse(tix_vms_2018)
length(tix_all_2018)
nrow(tix_all_2018)
nrow(tix_vms_2018)
nrow(tix_matched_2018)
tix_vlength_2018 <- fishtix_vlength_all %>% filter(year==2018)
glimpse(fishtix_vlength_all)
tix_vlength_2018 <- fishtix_vlength_all %>% filter(year==2018)
tix_vlength_Rec_IDs2018 <- unique(tix_vlength_2018$Rec_ID)
common_RecIDs_alltix_2018 <- intersect(tix_vlength_Rec_IDs2018,vms_Rec_IDs2018)
names(fishtix_vlength_all)
head(fishtix_vlength_all)
glimpse(fishtix_vlength_all)
glimpse(fishtix_basic_all)
tix_vlength_Rec_IDs2018 <- unique(tix_vlength_2018$Rec_ID)
head(tix_vlength_Rec_IDs2018)
tix_all_Rec_IDs2018 <- unique(tix_all_2018$Rec_ID)
head(tix_all_Rec_IDs2018)
glimpse(fishtix_matched_all)
paste(round(length(common_RecIDs_alltix_2018)/length(tix_all_Rec_IDs2018)*100),"percent of all tickets in 2018 match to VMS records")
tix_all_Rec_IDs2018 <- unique(tix_all_2018$Rec_ID)
tix_vlength_Rec_IDs2018 <- unique(tix_vlength_2018$Rec_ID)
common_RecIDs_2018_vlength_matched <- intersect(tix_vlength_Rec_IDs2018,tix_all_Rec_IDs2018)
common_RecIDs_vms_matched_2018 <- intersect(tix_vmsonly_Rec_IDs2018,vms_Rec_IDs2018)
length(common_RecIDs_vms_matched_2018)
length(unique(vms_2018$Rec_ID))
