theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Pounds/1e6,fill=state))+
geom_area()+
scale_fill_nejm()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Pounds/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.8)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Pounds/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.9)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
# Coastwide (3 states and total, no stacking)
coastwide_3states <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d(begin=0,end=0.9)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states
# Coastwide (3 states and total, no stacking)
coastwide_3states <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d()+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states
# Coastwide (3 states and total, no stacking)
coastwide_3states <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d(direction=-1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Pounds/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Pounds/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
ggsave(filename=paste0(plotdir,"coastwide_3states_stacked.png"),coastwide_3states_stacked,h=6,w=8,bg='transparent')
# Coastwide (3 states and total, no stacking)
coastwide_3states <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d(direction=-1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states
ggsave(filename=paste0(plotdir,"coastwide_3states.png"),coastwide_3states,h=6,w=8,bg='transparent')
# For each state separately
make_state_plot <- function(state_name) {
out <-  ts %>%
filter(State==state_name) %>%
ggplot(aes(Year,Pounds/1e6))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title=paste(tools::toTitleCase(tolower(state_name)),"Dungeness Crab Landings\n1950-2017"))
out
}
california <- make_state_plot('CALIFORNIA')
california
### $$ ###
coastwide_dollars <- ts %>%
group_by(Year) %>%
summarise(tot_dollars=sum(Dollars,na.rm=T)) %>%
ggplot(aes(Year,tot_dollars/1e6))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Dollars)",title="Coastwide Dungeness Crab Landings\n1950-2017")
coastwide_dollars
ggsave(filename=paste0(plotdir,"coastwide_single_dollars.png"),coastwide_dollars,h=6,w=8,bg='transparent')
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Dollars/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Dollars)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked_dollars <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Dollars/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Dollars)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked_dollars
ggsave(filename=paste0(plotdir,"coastwide_3states_stacked_dollars.png"),coastwide_3states_stacked,h=6,w=8,bg='transparent')
# Coastwide (3 states and total, stacked)
coastwide_3states_stacked <- ts %>%
mutate(state=tools::toTitleCase(tolower(State))) %>%
ggplot(aes(Year,Pounds/1e6,fill=state))+
geom_area()+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",fill="State")+
theme(legend.position = c(0.2,0.8))
coastwide_3states_stacked
ggsave(filename=paste0(plotdir,"coastwide_3states_stacked.png"),coastwide_3states_stacked,h=6,w=8,bg='transparent')
# Coastwide (3 states and total, no stacking)
coastwide_3states_dollars <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states_dollars
coastwide_3states
# Coastwide (3 states and total, no stacking)
coastwide_3states <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_fill_viridis_d(begin=0,end=0.9,direction = -1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states
# Coastwide (3 states and total, no stacking)
coastwide_3states <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d(direction=-1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states
coastwide_3states_stacked_dollars
# Coastwide (3 states and total, no stacking)
coastwide_3states_dollars <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_fill_viridis_d(direction = -1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states_dollars
# Coastwide (3 states and total, no stacking)
coastwide_3states_dollars <- ts %>%
select(Year,State,Pounds) %>%
pivot_wider(names_from=State,values_from=Pounds) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d(direction = -1)+
labs(x="Year",y="Crab Landings (Million Lbs)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states_dollars
ggsave(filename=paste0(plotdir,"coastwide_3states_dollars.png"),coastwide_3states_dollars,h=6,w=8,bg='transparent')
out <-  ts %>%
filter(State==state_name) %>%
ggplot(aes(Year,Dollars/1e6))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title=paste(tools::toTitleCase(tolower(state_name)),"Dungeness Crab Landings\n1950-2017"))
# Coastwide (3 states and total, no stacking)
coastwide_3states_dollars <- ts %>%
select(Year,State,Dollars) %>%
pivot_wider(names_from=State,values_from=Dollars) %>%
mutate(TOTAL=WASHINGTON+CALIFORNIA+OREGON) %>%
pivot_longer(-Year,names_to="state",values_to="landings") %>%
mutate(state=tools::toTitleCase(tolower(state))) %>%
mutate(state=factor(state,levels=c("California","Oregon","Washington","Total"))) %>%
ggplot(aes(Year,landings/1e6,col=state))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
scale_color_viridis_d(direction = -1)+
labs(x="Year",y="Crab Landings (Million Dollars)",title="Coastwide Dungeness Crab Landings\n1950-2017",col="")+
theme(legend.position = c(0.2,0.9))
coastwide_3states_dollars
ggsave(filename=paste0(plotdir,"coastwide_3states_dollars.png"),coastwide_3states_dollars,h=6,w=8,bg='transparent')
coastwide_3states_stacked_dollars
# For each state separately
make_state_plot <- function(state_name) {
out <-  ts %>%
filter(State==state_name) %>%
ggplot(aes(Year,Dollars/1e6))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Dollars)",title=paste(tools::toTitleCase(tolower(state_name)),"Dungeness Crab Landings\n1950-2017"))
out
}
california <- make_state_plot('CALIFORNIA')
california_dollars <- make_state_plot('CALIFORNIA')
california_dollars
# For each state separately
make_state_plot <- function(state_name) {
out <-  ts %>%
filter(State==state_name) %>%
ggplot(aes(Year,Pounds/1e6))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Lbs)",title=paste(tools::toTitleCase(tolower(state_name)),"Dungeness Crab Landings\n1950-2017"))
out
}
california <- make_state_plot('CALIFORNIA')
california
ggsave(filename=paste0(plotdir,"california.png"),california,h=6,w=8,bg='transparent')
# For each state separately
make_state_plot2 <- function(state_name) {
out <-  ts %>%
filter(State==state_name) %>%
ggplot(aes(Year,Dollars/1e6))+
geom_point()+
geom_line()+
scale_x_continuous(labels=seq(1950,2020,by=10),breaks=seq(1950,2020,by=10),expand = expand_scale(add=c(0,5)))+
labs(x="Year",y="Crab Landings (Million Dollars)",title=paste(tools::toTitleCase(tolower(state_name)),"Dungeness Crab Landings\n1950-2017"))
out
}
california_dollars <- make_state_plot2('CALIFORNIA')
california_dollars
california_dollars <- make_state_plot2('CALIFORNIA')
california_dollars
ggsave(filename=paste0(plotdir,"california_dollars.png"),california_dollars,h=6,w=8,bg='transparent')
oregon_dollars <- make_state_plot2('OREGON')
oregon_dollars
ggsave(filename=paste0(plotdir,"oregon_dollars.png"),oregon_dollars,h=6,w=8,bg='transparent')
washington_dollars <- make_state_plot2('WASHINGTON')
washington_dollars
ggsave(filename=paste0(plotdir,"washington_dollars.png"),washington_dollars,h=6,w=8,bg='transparent')
ptm <- proc.time()
## Join vms to fishtix
vms_out_owen <- fishtix_VMSyear_wLookback %>%
# start with all fishtickets for the year
select(Rec_ID,pacfin_port_code,drvid,date,TARGET,DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.) %>%
#rename port
rename(Port_Of_Landing=pacfin_port_code) %>%
# group by vessel
group_by(drvid) %>%
arrange(desc(date),pmin(DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.)) %>%
# For multiple-ticket days,
# define "TARGET" from the ticket with most landed pounds for that day, but also retain the other targets in a string
group_by(drvid, date) %>%
mutate(all_spp=paste(TARGET,sep='',collapse=''),sumlbs=DCRB..lbs.+LOBS..lbs.+SABL..lbs.+SPRW..lbs.+OtherGear..lbs.+Other..lbs.) %>%
top_n(1,wt=sumlbs) %>%
select(-sumlbs) %>%
ungroup() %>%
# add a time for the end of day
group_by(drvid) %>%
mutate(end = ymd_hms(paste(date, "23:59:59"),tz= "America/Los_Angeles")) %>%
# find the ticket BEFORE each ticket and note its time. Instead of creating NAs for the first ticket of the year for each vessel, assign a default value of January 1st. (CAN CHANGE THIS LATER, but for now allows us to use the first ticket of the for each vessel)
mutate(prev_ticket_dttm=lead(end,1,default=ymd_hms(paste0(current_year,"-01-01", " 23:59:59"),tz= "America/Los_Angeles"))) %>%
# add lookback window
mutate(lookback_dttm=end-days(lookback_window)) %>%
# choose "begin" date as the latest in time between previous ticket date and lookback date
mutate(begin=ifelse(lookback_dttm>prev_ticket_dttm,lookback_dttm,prev_ticket_dttm) %>% as_datetime(tz= "America/Los_Angeles"))%>%
# nest by ticket and match all vms for that vessel to each ticket (returns a list-column)
ungroup() %>%
# nest_join(tmp_dbf,by=c('drvid'='DOCNUM'),keep=TRUE,name="all_vms") %>%
left_join(tmp_dbf,by=c('drvid'='DOCNUM')) %>%
# (testing) filter, in one step, the VMS data
filter(westcoastdate >= begin,westcoastdate <= end) %>%
# group_by(Rec_ID) %>%
# then, filter the VMS from each ticket between the indicated dates
# mutate(vms=purrr::pmap(list(all_vms,begin,end),pull_vms)) %>%
# select(-all_vms) %>%
# Finally, unnest the list-column and select the variables of interest
# IMPORTANT: the option keep_empty=TRUE here RETAINS the unjoined rows. That is, it keep the fish tickets corresponding to vessels with no VMS.
# unnest(cols=c(vms),keep_empty = TRUE) %>%
ungroup() %>%
select(UTCDATETIM,LATITUDE, LONGITUDE,NGDC_M,VESSEL_NAM,AVG_SPEED,AVG_COURSE,drvid,DOCNUM,DECLARATIO,X_COORD,Y_COORD,VMS_RECNO,westcoastdate,westcoastdate_notime,TARGET,all_spp,Port_Of_Landing,Rec_ID,date,begin,end)
?left_join
ptm <- proc.time()
## Join vms to fishtix
vms_out_owen <- fishtix_VMSyear_wLookback %>%
# start with all fishtickets for the year
select(Rec_ID,pacfin_port_code,drvid,date,TARGET,DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.) %>%
#rename port
rename(Port_Of_Landing=pacfin_port_code) %>%
# group by vessel
group_by(drvid) %>%
arrange(desc(date),pmin(DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.)) %>%
# For multiple-ticket days,
# define "TARGET" from the ticket with most landed pounds for that day, but also retain the other targets in a string
group_by(drvid, date) %>%
mutate(all_spp=paste(TARGET,sep='',collapse=''),sumlbs=DCRB..lbs.+LOBS..lbs.+SABL..lbs.+SPRW..lbs.+OtherGear..lbs.+Other..lbs.) %>%
top_n(1,wt=sumlbs) %>%
select(-sumlbs) %>%
ungroup() %>%
# add a time for the end of day
group_by(drvid) %>%
mutate(end = ymd_hms(paste(date, "23:59:59"),tz= "America/Los_Angeles")) %>%
# find the ticket BEFORE each ticket and note its time. Instead of creating NAs for the first ticket of the year for each vessel, assign a default value of January 1st. (CAN CHANGE THIS LATER, but for now allows us to use the first ticket of the for each vessel)
mutate(prev_ticket_dttm=lead(end,1,default=ymd_hms(paste0(current_year,"-01-01", " 23:59:59"),tz= "America/Los_Angeles"))) %>%
# add lookback window
mutate(lookback_dttm=end-days(lookback_window)) %>%
# choose "begin" date as the latest in time between previous ticket date and lookback date
mutate(begin=ifelse(lookback_dttm>prev_ticket_dttm,lookback_dttm,prev_ticket_dttm) %>% as_datetime(tz= "America/Los_Angeles"))%>%
# nest by ticket and match all vms for that vessel to each ticket (returns a list-column)
ungroup() %>%
# nest_join(tmp_dbf,by=c('drvid'='DOCNUM'),keep=TRUE,name="all_vms") %>%
left_join(tmp_dbf,by=c('drvid'='DOCNUM')) %>%
# (testing) filter, in one step, the VMS data
filter(westcoastdate >= begin,westcoastdate <= end) %>%
# group_by(Rec_ID) %>%
# then, filter the VMS from each ticket between the indicated dates
# mutate(vms=purrr::pmap(list(all_vms,begin,end),pull_vms)) %>%
# select(-all_vms) %>%
# Finally, unnest the list-column and select the variables of interest
# IMPORTANT: the option keep_empty=TRUE here RETAINS the unjoined rows. That is, it keep the fish tickets corresponding to vessels with no VMS.
# unnest(cols=c(vms),keep_empty = TRUE) %>%
ungroup() %>%
select(UTCDATETIM,LATITUDE, LONGITUDE,NGDC_M,VESSEL_NAM,AVG_SPEED,AVG_COURSE,drvid,DECLARATIO,X_COORD,Y_COORD,VMS_RECNO,westcoastdate,westcoastdate_notime,TARGET,all_spp,Port_Of_Landing,Rec_ID,date,begin,end)
proc.time()-ptm
140/60
names(tmp_dbf)
names(fishtix_VMSyear_wLookback)
sum(is.na(tmp_dbf$westcoastdate))
vms_out_owen <- fishtix_VMSyear_wLookback %>%
# start with all fishtickets for the year
select(Rec_ID,pacfin_port_code,drvid,date,TARGET,DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.) %>%
#rename port
rename(Port_Of_Landing=pacfin_port_code) %>%
# group by vessel
group_by(drvid) %>%
arrange(desc(date),pmin(DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.)) %>%
# For multiple-ticket days,
# define "TARGET" from the ticket with most landed pounds for that day, but also retain the other targets in a string
group_by(drvid, date) %>%
mutate(all_spp=paste(TARGET,sep='',collapse=''),sumlbs=DCRB..lbs.+LOBS..lbs.+SABL..lbs.+SPRW..lbs.+OtherGear..lbs.+Other..lbs.) %>%
top_n(1,wt=sumlbs) %>%
select(-sumlbs) %>%
ungroup() %>%
# add a time for the end of day
group_by(drvid) %>%
mutate(end = ymd_hms(paste(date, "23:59:59"),tz= "America/Los_Angeles")) %>%
# find the ticket BEFORE each ticket and note its time. Instead of creating NAs for the first ticket of the year for each vessel, assign a default value of January 1st. (CAN CHANGE THIS LATER, but for now allows us to use the first ticket of the for each vessel)
mutate(prev_ticket_dttm=lead(end,1,default=ymd_hms(paste0(current_year,"-01-01", " 23:59:59"),tz= "America/Los_Angeles"))) %>%
# add lookback window
mutate(lookback_dttm=end-days(lookback_window)) %>%
# choose "begin" date as the latest in time between previous ticket date and lookback date
mutate(begin=ifelse(lookback_dttm>prev_ticket_dttm,lookback_dttm,prev_ticket_dttm) %>% as_datetime(tz= "America/Los_Angeles"))%>%
# nest by ticket and match all vms for that vessel to each ticket (returns a list-column)
ungroup() %>%
# nest_join(tmp_dbf,by=c('drvid'='DOCNUM'),keep=TRUE,name="all_vms") %>%
left_join(tmp_dbf,by=c('drvid'='DOCNUM')) %>%
# filter, in one step, the VMS data such that the data for each trip is correctly truncated to fall within the lookback window.
# If any tickets did NOT match VMS data, they will not have associated dates from VMS.
# We retain these, and then produce a binary indicator denoting that they did not match.
filter((westcoastdate >= begin & westcoastdate <= end)| is.na(westcoastdate)) %>%
mutate(has_vms=ifelse(is.na(westcoastdate),0,1)) %>%
# group_by(Rec_ID) %>%
# then, filter the VMS from each ticket between the indicated dates
# mutate(vms=purrr::pmap(list(all_vms,begin,end),pull_vms)) %>%
# select(-all_vms) %>%
# Finally, unnest the list-column and select the variables of interest
# IMPORTANT: the option keep_empty=TRUE here RETAINS the unjoined rows. That is, it keep the fish tickets corresponding to vessels with no VMS.
# unnest(cols=c(vms),keep_empty = TRUE) %>%
ungroup() %>%
select(UTCDATETIM,LATITUDE, LONGITUDE,NGDC_M,VESSEL_NAM,AVG_SPEED,AVG_COURSE,drvid,DECLARATIO,X_COORD,Y_COORD,VMS_RECNO,westcoastdate,westcoastdate_notime,TARGET,all_spp,Port_Of_Landing,Rec_ID,date,begin,end)
proc.time()-ptm
test <- vms_out_owen %>% filter(has_vms==0)
ptm <- proc.time()
## Join vms to fishtix
vms_out_owen <- fishtix_VMSyear_wLookback %>%
# start with all fishtickets for the year
select(Rec_ID,pacfin_port_code,drvid,date,TARGET,DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.) %>%
#rename port
rename(Port_Of_Landing=pacfin_port_code) %>%
# group by vessel
group_by(drvid) %>%
arrange(desc(date),pmin(DCRB..lbs.,LOBS..lbs.,SABL..lbs.,SPRW..lbs.,OtherGear..lbs., Other..lbs.)) %>%
# For multiple-ticket days,
# define "TARGET" from the ticket with most landed pounds for that day, but also retain the other targets in a string
group_by(drvid, date) %>%
mutate(all_spp=paste(TARGET,sep='',collapse=''),sumlbs=DCRB..lbs.+LOBS..lbs.+SABL..lbs.+SPRW..lbs.+OtherGear..lbs.+Other..lbs.) %>%
top_n(1,wt=sumlbs) %>%
select(-sumlbs) %>%
ungroup() %>%
# add a time for the end of day
group_by(drvid) %>%
mutate(end = ymd_hms(paste(date, "23:59:59"),tz= "America/Los_Angeles")) %>%
# find the ticket BEFORE each ticket and note its time. Instead of creating NAs for the first ticket of the year for each vessel, assign a default value of January 1st. (CAN CHANGE THIS LATER, but for now allows us to use the first ticket of the for each vessel)
mutate(prev_ticket_dttm=lead(end,1,default=ymd_hms(paste0(current_year,"-01-01", " 23:59:59"),tz= "America/Los_Angeles"))) %>%
# add lookback window
mutate(lookback_dttm=end-days(lookback_window)) %>%
# choose "begin" date as the latest in time between previous ticket date and lookback date
mutate(begin=ifelse(lookback_dttm>prev_ticket_dttm,lookback_dttm,prev_ticket_dttm) %>% as_datetime(tz= "America/Los_Angeles"))%>%
# nest by ticket and match all vms for that vessel to each ticket (returns a list-column)
ungroup() %>%
# nest_join(tmp_dbf,by=c('drvid'='DOCNUM'),keep=TRUE,name="all_vms") %>%
left_join(tmp_dbf,by=c('drvid'='DOCNUM')) %>%
# filter, in one step, the VMS data such that the data for each trip is correctly truncated to fall within the lookback window.
# If any tickets did NOT match VMS data, they will not have associated dates from VMS.
# We retain these, and then produce a binary indicator denoting that they did not match.
filter((westcoastdate >= begin & westcoastdate <= end)| is.na(westcoastdate)) %>%
mutate(has_vms=ifelse(is.na(westcoastdate),0,1)) %>%
# group_by(Rec_ID) %>%
# then, filter the VMS from each ticket between the indicated dates
# mutate(vms=purrr::pmap(list(all_vms,begin,end),pull_vms)) %>%
# select(-all_vms) %>%
# Finally, unnest the list-column and select the variables of interest
# IMPORTANT: the option keep_empty=TRUE here RETAINS the unjoined rows. That is, it keep the fish tickets corresponding to vessels with no VMS.
# unnest(cols=c(vms),keep_empty = TRUE) %>%
ungroup() %>%
select(UTCDATETIM,LATITUDE, LONGITUDE,NGDC_M,VESSEL_NAM,AVG_SPEED,AVG_COURSE,drvid,DECLARATIO,X_COORD,Y_COORD,VMS_RECNO,westcoastdate,westcoastdate_notime,TARGET,all_spp,Port_Of_Landing,Rec_ID,date,begin,end,has_vms)
proc.time()-ptm
142/60
test <- vms_out_owen %>% filter(has_vms==0)
View(test)
