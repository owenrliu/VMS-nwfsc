tempname <- paste0('orig',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned.csv'),col_types='dcTddcddcddddTDcccdcc')
assign(tempname,tempout)
}
x <- problems(orig2009)
glimpse(x)
names(orig2009)
glimpse(orig2009)
# These are large data files, so this will take awhile
# base file path on my computer
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
years <- 2009:2018
# original cleaned
for(i in years){
tempname <- paste0('orig',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned.csv'),col_types='dcTddcddcddddTDcccdcc')
assign(tempname,tempout)
}
x <- problems(orig2009)
glimpse(X)
glimpse()
glimpse(x)
names(orig2009)
View(x)
library(lubridate)
as_datetime("1/12/2009 12:40")
?as_datetime
# These are large data files, so this will take awhile
# base file path on my computer
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
years <- 2009:2018
# original cleaned
for(i in years){
tempname <- paste0('orig',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned.csv'),col_types='dcTddcddcddddTDcccdcc')
assign(tempname,tempout)
}
x <- problems(orig2009)
glimpse(x)
knitr::opts_knit$set(root.dir = "D:/VMS-repo")
rm(list=ls())
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(move)
## directory where filtered VMS data is stored as .csv file
VMS_dir ="C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/owen processed/clean/"
## calendar years
years <- c(2009)
for(i in seq(1,length(years))){
y <- years[i]
if(i == 1){
vms <- read.csv(paste0(VMS_dir,"VMS_Outputs_wTARGET_10d_lookback_", y, "_speed_cleaned_offshore.csv"))
} else{
tmp_vms <-read.csv(paste0(VMS_dir,"VMS_Outputs_wTARGET_10d_lookback_", y, "_speed_cleaned_offshore.csv"))
vms <- rbind(vms, tmp_vms)
}
}
if("X" %in% colnames(vms)){
vms <- dplyr::select(vms, -X)
}
dim(vms)
head(vms)
vms$westcoastdate <- ymd_hms(vms$westcoastdate, tz= "America/Los_Angeles")
class(vms$westcoastdate)
vms$UTCDATETIM <- ymd_hms(vms$UTCDATETIM, tz= "UTC")
vms$DECLARATIO[vms$DECLARATIO == "N/A"] <- NA
vms <- vms %>%
arrange(Rec_ID, UTCDATETIM)
start.time <- Sys.time()
movedat <- move(x=vms$LONGITUDE,
y=vms$LATITUDE,
time=vms$UTCDATETIM,
data=vms,
proj=sp::CRS("+init=epsg:4326"),
animal=vms$Rec_ID)
Sys.time() - start.time
timestep <- timeLag(movedat, units="secs")
movedat$timelag <- unlist(lapply(timestep, c, NA))
vmsdat_move <- as.data.frame(movedat)
vmsdat_move <- vmsdat_move %>%
dplyr::select(c(Port_Of_Landing, Rec_ID, LATITUDE, LONGITUDE, westcoastdate, avg_speed_ms, in_port, timelag)) %>%
arrange(Rec_ID, westcoastdate)
head(vmsdat_move)
vmsdat_move <- vmsdat_move %>%
group_by(Rec_ID) %>%
mutate(trip_dt = sum(timelag, na.rm=TRUE), recnum = seq(1, length(LATITUDE)), max_recnum = max(recnum)) %>%
ungroup()
vmsdat_maxDT <- vmsdat_move %>%
group_by(Rec_ID) %>%
top_n(1, wt=timelag)
vmsdat_maxDT <- vmsdat_maxDT %>%
mutate(remove_trip = ifelse(timelag > (4*3600) | (timelag/trip_dt) > 0.40, "remove", "retain"))
n_remove = sum(vmsdat_maxDT$remove_trip == "remove")
cat("Flagged ", n_remove/length(vmsdat_maxDT$remove_trip)*100, "% (", n_remove,") trips for removal.")
cat(sum(vmsdat_maxDT$remove_trip == "remove" & !is.na(vmsdat_maxDT$in_port))/n_remove*100, "% removed trips were in-port timelags.")
cat(sum(vmsdat_maxDT$remove_trip == "remove" & (vmsdat_maxDT$max_recnum-vmsdat_maxDT$recnum == 1))/n_remove*100, "% removed trips were the second to last record in the trip.")
# trips to retain
trips_retained <- vmsdat_maxDT %>%
filter(remove_trip == "retain" | remove_trip == "remove" & !is.na(in_port)) %>%
dplyr::select(Rec_ID)
# get the VMS records for those trips
vms_out <- vms %>%
dplyr::filter(Rec_ID %in% trips_retained$Rec_ID) %>%
dplyr::select(-dt)
# write out
for(y in years){
tmp_out <- filter(vms_out, year(westcoastdate) == y)
write.csv(tmp_out, paste0(VMS_dir,"VMS_Outputs_wTARGET_10d_lookback_", y, "_final_cleaned.csv"), row.names=FALSE)
}
# trips to retain
trips_removed <- vmsdat_maxDT %>%
filter(!(Rec_ID %in% trips_retained$Rec_ID) & ((max_recnum-recnum) != 1)) %>%
dplyr::select(Rec_ID)
# get the VMS records for those trips
vms_removed <- vms %>%
filter(Rec_ID %in% trips_removed$Rec_ID) %>%
dplyr::select(-dt)
# write out
for(y in years){
tmp_out <- filter(vms_removed, year(westcoastdate) == y)
write.csv(tmp_out, paste0(VMS_dir,"VMS_Outputs_wTARGET_10d_lookback_", y, "_timegaps_removed.csv"), row.names=FALSE)
}
# trips to remove
trips_removed_tmp <- vmsdat_maxDT %>%
filter(!(Rec_ID %in% trips_retained$Rec_ID) & ((max_recnum-recnum) == 1)) %>%
dplyr::select(Rec_ID)
# get the VMS records for those trips
vms_removed_tmp <- vms %>%
filter(Rec_ID %in% trips_removed_tmp$Rec_ID) %>%
dplyr::select(-dt)
# write out
for(y in years){
tmp_out <- filter(vms_removed_tmp, year(westcoastdate) == y)
write.csv(tmp_out, paste0(VMS_dir,"VMS_Outputs_wTARGET_10d_lookback_", y, "_timegaps_removed_temp.csv"), row.names=FALSE)
}
names(vms_out)
# get the VMS records for those trips
vms_out <- vms %>%
dplyr::filter(Rec_ID %in% trips_retained$Rec_ID) %>%
dplyr::select(-dx)
names(vms_out)
# trips to retain
trips_retained <- vmsdat_maxDT %>%
filter(remove_trip == "retain" | remove_trip == "remove" & !is.na(in_port)) %>%
dplyr::select(Rec_ID)
# get the VMS records for those trips
vms_out <- vms %>%
dplyr::filter(Rec_ID %in% trips_retained$Rec_ID) %>%
dplyr::select(-dt,-dx)
# write out
for(y in years){
tmp_out <- filter(vms_out, year(westcoastdate) == y)
write.csv(tmp_out, paste0(VMS_dir,"VMS_Outputs_wTARGET_10d_lookback_", y, "_final_cleaned.csv"), row.names=FALSE)
}
names(vms_out)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library(tidyverse)
# These are large data files, so this will take awhile
# base file path on my computer
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
years <- 2009:2018
# original cleaned
for(i in years){
tempname <- paste0('orig',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned.csv'),col_types='dcTddcddcddddTDcccdcc')
assign(tempname,tempout)
}
x <- problems(orig2009)
glimpse(x)
vms_dir
VMS_dir
# These are large data files, so this will take awhile
# base file path on my computer
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
years <- 2009:2018
# original cleaned
for(i in years){
tempname <- paste0('orig',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned.csv'),col_types='dcTddcddcddddTDcccdcc')
assign(tempname,tempout)
}
vms_orig_clean <- bind_rows(orig2009,orig2010,orig2011,orig2012,orig2013,orig2014,orig2015,orig2016,orig2017,orig2018)
names(vms_orig_clean)
# cleaned, interpolated, regularized
rm(list=setdiff(ls(), "vms_orig_clean"))
# These are large data files, so this will take awhile
# base file path on my computer
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
years <- 2009:2018
head(vms_orig_clean$DECLARATIO)
# cleaned, interpolated, regularized
rm(list=ls()[!(ls() %in% c('vms_orig_clean','fp','years'))])
for(i in years){
tempname <- paste0('int_reg_',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned_interpolated_regular.csv'),col_types='dcTddccddTDdccccd')
assign(tempname,tempout)
}
View(int_reg_2018)
View(int_reg_2017)
View(int_reg_2013)
View(int_reg_2012)
View(int_reg_2010)
View(int_reg_2009)
?readr::cols
cols(int_reg_2009)
col_names(int_reg_2009)
col.names(int_reg_2009)
colnames(int_reg_2009)
cols(a = col_integer())
cols_only(a = col_integer())
paste(colnames(int_reg_2009))
?read_csv
# cleaned, interpolated, regularized
rm(list=ls()[!(ls() %in% c('vms_orig_clean','fp','years'))])
# note: some of these have extra columsn. for now, only keep the lowest common denominator columns
cols_to_import <- cols_only(
Rec_ID="d",
DOCNUM='c',
UTCDATETIM="T",
LATITUDE='d',
LONGITUDE='d',
VESSEL_NAM='c',
DECLARATIO='c',
X_COORD='d',
Y_COORD='d',
westcoastdate='T',
westcoastdate_notime='D',
avg_speed_recalc='d',
TARGET='c',
Port_Of_Landing='c',
TARGET_max='c',
sensor='c',
VMS_RECNO='d'
)
# col_types='dcTddccddTDdccccd'
for(i in years){
tempname <- paste0('int_reg_',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned_interpolated_regular.csv'),col_types = cols_to_import)
assign(tempname,tempout)
}
View(int_reg_2009)
View(int_reg_2010)
vms_int_reg <- bind_rows(int_reg_2009,int_reg_2010,int_reg_2011,int_reg_2012,int_reg_2013,int_reg_2014,int_reg_2015,int_reg_2016,int_reg_2017,int_reg_2018)
# cleaned, interpolated, including original points
rm(list=ls()[!(ls() %in% c('vms_orig_clean','vms_int_reg','fp','years'))])
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',2009,'_final_cleaned_interpolated_all.csv'),col_types = cols())
names(tempout)
tempout2 <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',2010,'_final_cleaned_interpolated_all.csv'),col_types = cols())
names(tempout2)
head(tempout2$in_port)
tempout2 <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',2016,'_final_cleaned_interpolated_all.csv'),col_types = cols())
names(tempout2)
View(tempout)
names(tempout)
# cleaned, interpolated, including original points
rm(list=ls()[!(ls() %in% c('vms_orig_clean','vms_int_reg','fp','years'))])
# note: some of these have extra columsn. for now, only keep the lowest common denominator columns
cols_to_import <- cols_only(
Rec_ID="d",
DOCNUM='c',
UTCDATETIM="T",
LATITUDE='d',
LONGITUDE='d',
VESSEL_NAM='c',
AVG_SPEED='d',
AVG_COURSE='d',
DECLARATIO='c',
NGDC_M='d',
X_COORD='d',
Y_COORD='d',
VMS_RECNO='d',
westcoastdate='T',
westcoastdate_notime='D',
TARGET='c',
Port_Of_Landing='c',
TARGET_max='c',
avg_speed_ms='d',
in_port='c',
to_rm='c',
sensor='c',
dt='d',
dx='d',
dx.y='d',
avg_speed_recalc='d'
)
# col_types='dcTddccddTDdccccd'
for(i in years){
tempname <- paste0('int_all_',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned_interpolated_all.csv'),col_types = cols_to_import)
if("dx.y"%in%colnames(tempout)) {tempout = tempout %>% rename(dx=dx.y)}
assign(tempname,tempout)
}
eyars=2014:2018
years=2014:2018
# col_types='dcTddccddTDdccccd'
for(i in years){
tempname <- paste0('int_all_',i)
tempout <- read_csv(paste0(fp,'VMS_Outputs_wTARGET_10d_lookback_',i,'_final_cleaned_interpolated_all.csv'),col_types = cols_to_import)
if("dx.y"%in%colnames(tempout)) {tempout = tempout %>% rename(dx=dx.y)}
assign(tempname,tempout)
}
vms_int_all <- bind_rows(int_all_2009,int_all_2010,int_all_2011,int_all_2012,int_all_2014,int_all_2015,int_all_2016,int_all_2017,int_all_2018)
rm(list=ls()[!(ls() %in% c('vms_orig_clean','vms_int_reg','vms_int_all','fp'))])
fp
save.image(file=paste0(fp,"VMS_2009_2018_clean.RData"))
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
tempout <- read_csv(paste0(fp_tix,'fish tickets ',2009,' processed_multisp03.csv'),col_types = cols())
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)','fish tickets ',2009,' processed_multisp03.csv'),col_types = cols())
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)/','fish tickets ',2009,' processed_multisp03.csv'),col_types = cols())
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)/','fish tickets ',2009,' processed_multispecies03.csv'),col_types = cols())
x <- problems(tempout)
glimpse(x)
unique(x$col)
names(tempout)
View(tempout)
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
years <- 2009:2018
for(i in years){
tempname <- paste0('fishtix_basic_',i)
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)','fish tickets ',i,' processed_multispecies03.csv'),col_types = cols())
assign(tempname,tempout)
}
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
years <- 2009:2018
for(i in years){
tempname <- paste0('fishtix_basic_',i)
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)/','fish tickets ',i,' processed_multispecies03.csv'),col_types = cols())
assign(tempname,tempout)
}
x <- problems(fishtix_basic_2018)
glimpse(x)
names(x)
names(fishtix_basic_2018)
names(fishtix_basic_2010)
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
years <- 2009:2018
for(i in years){
tempname <- paste0('fishtix_basic_',i)
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)/','fish tickets ',i,' processed_multispecies03.csv'),col_types = cols(drvid='c'))
assign(tempname,tempout)
}
x <- problems(fishtix_basic_2018)
x
# throws a couple of readr errors here, but they are only in one column (gear code, ) which we do not offically need anyway
fishtix_basic_all <- bind_rows(fishtix_basic_2009,fishtix_basic_2010,fishtix_basic_2011,fishtix_basic_2012,fishtix_basic_2013,fishtix_basic_2014,fishtix_basic_2015,fishtix_basic_2016,fishtix_basic_2017,fishtix_basic_2018)
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
years <- 2009:2018
for(i in years){
tempname <- paste0('fishtix_basic_',i)
tempout <- read_csv(paste0(fp_tix,'Basic Processing (Step 1 Only)/','fish tickets ',i,' processed_multispecies03.csv'),col_types = cols(drvid='c',gear_code_all='i'))
assign(tempname,tempout)
}
# throws a couple of readr errors here, but they are only in one column (gear code, ) which we do not offically need anyway
fishtix_basic_all <- bind_rows(fishtix_basic_2009,fishtix_basic_2010,fishtix_basic_2011,fishtix_basic_2012,fishtix_basic_2013,fishtix_basic_2014,fishtix_basic_2015,fishtix_basic_2016,fishtix_basic_2017,fishtix_basic_2018)
View(fishtix_basic_all)
keeps <- c('vms_orig_clean','vms_int_reg','vms_int_all','fp','fishtix_basic_all')
rm(list=setdiff(ls(),keeps))
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',2009,'.csv'),col_types = cols())
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',2009,'.csv'),col_types = cols())
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',2009,'.csv'),col_types = cols())
names(tempout)
glimpse(tempout)
keeps <- c('vms_orig_clean','vms_int_reg','vms_int_all','fp','fp_tix','fishtix_basic_all')
rm(list=setdiff(ls(),keeps))
for(i in years){
tempname <- paste0('fishtix_vms_matched_',i)
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',i,'.csv'),col_types = cols())
assign(tempname,tempout)
}
years
years <- 2009:2018
keeps <- c('vms_orig_clean','vms_int_reg','vms_int_all','fp','fp_tix','years','fishtix_basic_all')
rm(list=setdiff(ls(),keeps))
for(i in years){
tempname <- paste0('fishtix_vms_matched_',i)
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',i,'.csv'),col_types = cols())
assign(tempname,tempout)
}
# throws a couple of readr errors here, but they are only in one column (gear code, ) which we do not offically need anyway
fishtix_matched_all <- bind_rows(fishtix_vms_matched_2009,fishtix_vms_matched_2010,fishtix_vms_matched_2011,fishtix_vms_matched_2012,fishtix_vms_matched_2013,fishtix_vms_matched_2014,fishtix_vms_matched_2015,fishtix_vms_matched_2016,fishtix_vms_matched_2017,fishtix_vms_matched_2018)
keeps <- c('vms_orig_clean','vms_int_reg','vms_int_all','fp','fp_tix','years','fishtix_basic_all')
rm(list=setdiff(ls(),keeps))
for(i in years){
tempname <- paste0('fishtix_vms_matched_',i)
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',i,'.csv'),col_types = cols(gear_code_all='i'))
assign(tempname,tempout)
}
# throws a couple of readr errors here, but they are only in one column (gear code, ) which we do not offically need anyway
fishtix_matched_all <- bind_rows(fishtix_vms_matched_2009,fishtix_vms_matched_2010,fishtix_vms_matched_2011,fishtix_vms_matched_2012,fishtix_vms_matched_2013,fishtix_vms_matched_2014,fishtix_vms_matched_2015,fishtix_vms_matched_2016,fishtix_vms_matched_2017,fishtix_vms_matched_2018)
rm(list=ls()[!(ls() %in% c('fishtix_basic_all','vms_matched_all'))])
keeps <- c('vms_orig_clean','vms_int_reg','vms_int_all','fp','fp_tix','years','fishtix_basic_all')
rm(list=setdiff(ls(),keeps))
for(i in years){
tempname <- paste0('fishtix_vms_matched_',i)
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',i,'.csv'),col_types = cols(gear_code_all='i'))
assign(tempname,tempout)
}
years <- 2009:2018
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
keeps <- c('vms_orig_clean','vms_int_reg','vms_int_all','fp','fp_tix','years','fishtix_basic_all')
rm(list=setdiff(ls(),keeps))
for(i in years){
tempname <- paste0('fishtix_vms_matched_',i)
tempout <- read_csv(paste0(fp_tix,'VMS-Matched (Step 5)/','FishTix_wVMS_10d_lookback_',i,'.csv'),col_types = cols(gear_code_all='i'))
assign(tempname,tempout)
}
# throws a couple of readr errors here, but they are only in one column (gear code, ) which we do not offically need anyway
fishtix_matched_all <- bind_rows(fishtix_vms_matched_2009,fishtix_vms_matched_2010,fishtix_vms_matched_2011,fishtix_vms_matched_2012,fishtix_vms_matched_2013,fishtix_vms_matched_2014,fishtix_vms_matched_2015,fishtix_vms_matched_2016,fishtix_vms_matched_2017,fishtix_vms_matched_2018)
rm(list=ls()[!(ls() %in% c('fishtix_basic_all','fishtix_matched_all'))])
save.image(file=paste0(fp,"VMS_2009_2018_clean.RData"))
# These are large data files, so this will take awhile
# base file path on my computer
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
fp_fishtix
fp_tix
fp_tix <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/Fish tickets/"
rm(list=ls()[!(ls() %in% c('fishtix_basic_all','fishtix_matched_all','fp_tix'))])
save.image(file=paste0(fp,"VMS_2009_2018_clean.RData"))
rm(list=ls()[!(ls() %in% c('fishtix_basic_all','fishtix_matched_all','fp_tix'))])
save.image(file=paste0(fp_tix,"FishTix_all_2009_2018.RData"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(here)
library(fasterize)
library(raster)
library(rnaturalearth)
# clean, interpolated vms data
vms <- read_csv("C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/VMS_Outputs_wTARGET_10d_lookback_2011_final_cleaned_interpolated_regular.csv",col_types='dcTddccddTDdccccd')
# 5x5 grid shapefile
grd <- read_sf(here::here("Input_Data","5x5 Grid","five_km_grid_polys_geo.shp"))
names(grd)
# convert vms to spatial object
vms_sf <- vms %>%
st_as_sf(coords=c('LONGITUDE','LATITUDE'),crs=4326)
# do the join
pt <- proc.time()
vms_grd_match <- vms_sf %>%
st_join(grd)
proc.time()-pt
names(vms_grd_match)
length(unique(vms_grd_match$GRID5KM_ID))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(sf)
library(here)
library(fasterize)
library(raster)
library(rnaturalearth)
# clean, interpolated vms data
vms <- read_csv("C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/VMS_Outputs_wTARGET_10d_lookback_2009_final_cleaned_interpolated_regular.csv",col_types='dcTddccddTDdccccd')
# 5x5 grid shapefile
# grd <- read_sf(here::here("Input_Data","5x5 Grid","five_km_grid_polys_geo.shp"))
grd <- read_sf(here::here("Input_Data","5x5 Grid","regions_master_final_lamb.shp"))
names(grd)
meta <- readxl::read_xlsx(here::here("Input Data","5x5 Grid","regions_master_final_lamb_metadata.xlsx"))
?read_xlsx
meta <- readxl::read_xlsx(here::here("Input_Data","5x5 Grid","regions_master_final_lamb_metadata.xlsx"))
View(meta)
library(knitr)
meta <- readxl::read_xlsx(here::here("Input_Data","5x5 Grid","regions_master_final_lamb_metadata.xlsx")) %>% kable()
meta
st_crs(grd)
# convert vms to spatial object (longitude/latitude)
vms_sf <- vms %>%
st_as_sf(coords=c('LONGITUDE','LATITUDE'),crs=4326) %>%
# then, convert to planar projection to match the grid
st_transform(st_crs(grd))
# do the join
pt <- proc.time()
vms_grd_match <- vms_sf %>%
st_join(grd)
proc.time()-pt
names(vms_grd_match)
length(unique(vms_grd_match$GRID5KM_ID))
names(vms_grd_match)
length(unique(vms_grd_match$GRID5KM_ID))
length(unique(vms_grd_match$BAND_25KM))
length(unique(vms_grd_match$BAND_50KM))
class(grd)
# write a non-spatial version of the joined data
vms_grd <- vms_grd_match
st_geometry(vms_grd) <- NULL
write_csv(vms_grd,"C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/VMS_Outputs_wTARGET_10d_lookback_2009_final_cleaned_interpolated_regular_w_5k_grid.csv")
# clear wrkspace
rm(list=setdiff(ls(),'grd'))
?load
# load RData
fp <- "C:/Users/owenr/Documents/postdocs/NOAA NRC/NWFSC work/VMS DATA CONFIDENTIAL/Processed Data/VMS/"
load(file=paste0(fp,"VMS_2009_2018_clean.RData"))
# convert VMS to spatial object
pt <- proc.time()
vms_all_sf <- vms_int_all %>%
st_as_sf(coords=c('LONGITUDE','LATITUDE'),crs=4326) %>%
# then, convert to planar projection to match the grid
st_transform(st_crs(grd))
proc.time()-pt
419/60
# do the join
pt <- proc.time()
vms_all_grd_match <- vms_all_sf %>%
st_join(grd)
# convert VMS to spatial object
pt <- proc.time()
vms_all_sf <- vms_int_reg %>%
st_as_sf(coords=c('LONGITUDE','LATITUDE'),crs=4326) %>%
# then, convert to planar projection to match the grid
st_transform(st_crs(grd))
